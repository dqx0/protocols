name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        goos: [ linux, windows, darwin ]
        goarch: [ amd64, arm64 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      - name: Download deps
        run: go mod download

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          APP_NAME=httpx-echo
          OUTDIR="dist/${GOOS}_${GOARCH}"
          mkdir -p "$OUTDIR"
          EXT=""
          if [ "$GOOS" = "windows" ]; then EXT=".exe"; fi
          go build -ldflags "-s -w" -o "$OUTDIR/$APP_NAME$EXT" ./cmd/httpx-echo

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.goos }}_${{ matrix.goarch }}
          path: dist/${{ matrix.goos }}_${{ matrix.goarch }}/

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Package artifacts
        run: |
          cd dist
          for dir in *; do
            if [ -d "$dir" ]; then
              zip -r "../$dir.zip" "$dir"
            fi
          done

      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
